namespace SaloonOS.Application.Common.Contracts;

/// <summary>
/// Defines the contract for a payment processing service.
/// This abstraction allows the application to be decoupled from a specific payment provider like Stripe.
/// We could swap the implementation to another provider (e.g., PayPal, Adyen) without changing the application logic.
/// </summary>
public interface IPaymentService
{
    /// <summary>
    /// Processes a payment using the provided details.
    /// </summary>
    /// <param name="amount">The amount to charge.</param>
    /// <param name="currency">The three-letter ISO currency code.</param>
    /// <param name="paymentToken">A single-use token representing the payment method, generated by a client-side library (e.g., Stripe.js).</param>
    /// <param name="description">An optional description for the charge.</param>
    /// <returns>A unique transaction identifier from the payment provider upon success.</returns>
    Task<string> ProcessPaymentAsync(decimal amount, string currency, string paymentToken, string description = "");
}